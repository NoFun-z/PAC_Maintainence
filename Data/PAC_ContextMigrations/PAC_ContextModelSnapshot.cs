// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NiagaraCollegeProject.Data;

#nullable disable

namespace NiagaraCollegeProject.Data.PAC_ContextMigrations
{
    [DbContext(typeof(PAC_Context))]
    partial class PAC_ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.14");

            modelBuilder.Entity("MVC_Music.Models.FileContent", b =>
                {
                    b.Property<int>("FileContentID")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("Content")
                        .HasColumnType("BLOB");

                    b.HasKey("FileContentID");

                    b.ToTable("FileContent");
                });

            modelBuilder.Entity("MVC_Music.Models.UploadedFile", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(4000)
                        .HasColumnType("TEXT");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FileName")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("MimeType")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("UploadedFile");

                    b.HasDiscriminator<string>("Discriminator").HasValue("UploadedFile");
                });

            modelBuilder.Entity("NiagaraCollegeProject.Models.AcademicDivision", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DivisionName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("AcademicDivisions");
                });

            modelBuilder.Entity("NiagaraCollegeProject.Models.ActionItem", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AgendaName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("TEXT");

                    b.Property<bool>("Completed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("TEXT");

                    b.Property<int?>("MeetingID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MemberID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("TaskDueDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("MeetingID");

                    b.HasIndex("MemberID");

                    b.ToTable("ActionItems");
                });

            modelBuilder.Entity("NiagaraCollegeProject.Models.AgendaItem", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AgendaName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("MeetingID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MeetingMinuteID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MemberID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UploadDate")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("MeetingID");

                    b.HasIndex("MeetingMinuteID");

                    b.HasIndex("MemberID");

                    b.ToTable("AgendaItem");
                });

            modelBuilder.Entity("NiagaraCollegeProject.Models.CommitteeRole", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CommitteeID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Role")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("CommitteeID");

                    b.ToTable("CommitteeRole");
                });

            modelBuilder.Entity("NiagaraCollegeProject.Models.Meeting", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AcademicDivisionID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("MeetingNotes")
                        .HasMaxLength(300)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("MeetingStartTimeDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("MeetingTopicName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("MemberID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PACID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("AcademicDivisionID");

                    b.HasIndex("MemberID");

                    b.HasIndex("PACID");

                    b.ToTable("Meeting");
                });

            modelBuilder.Entity("NiagaraCollegeProject.Models.MeetingAttendees", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("MeetingID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MemberID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("MeetingID");

                    b.HasIndex("MemberID");

                    b.ToTable("MeetingAttendees");
                });

            modelBuilder.Entity("NiagaraCollegeProject.Models.MeetingMinute", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Duration")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MeetingDiscussion")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<int>("MeetingID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("MeetingID");

                    b.ToTable("MeetingMinutes");
                });

            modelBuilder.Entity("NiagaraCollegeProject.Models.Member", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AcademicDivisionID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CommitteeRoleID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CompanyCity")
                        .HasColumnType("TEXT");

                    b.Property<string>("CompanyEmail")
                        .HasColumnType("TEXT");

                    b.Property<string>("CompanyName")
                        .HasColumnType("TEXT");

                    b.Property<string>("CompanyPhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("CompanyPositionTitle")
                        .HasColumnType("TEXT");

                    b.Property<string>("CompanyPostalCode")
                        .HasColumnType("TEXT");

                    b.Property<int>("CompanyProvince")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CompanyStreetAddress")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("EducationSummary")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<bool>("MemberStatus")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("NCGraduate")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NumberOfPushSubscriptions")
                        .HasColumnType("INTEGER");

                    b.Property<string>("OccupationalSummary")
                        .HasColumnType("TEXT");

                    b.Property<int?>("PACID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("PostalCode")
                        .HasColumnType("TEXT");

                    b.Property<int>("PreferredContact")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Province")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ReNewDate_")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("RenewalDueBy")
                        .HasColumnType("TEXT");

                    b.Property<int?>("SalutationID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("SignUpDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("StreetAddress")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("AcademicDivisionID");

                    b.HasIndex("CommitteeRoleID");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("PACID");

                    b.HasIndex("SalutationID");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("NiagaraCollegeProject.Models.MemberPhoto", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("Content")
                        .HasColumnType("BLOB");

                    b.Property<int>("MemberID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MimeType")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("MemberID")
                        .IsUnique();

                    b.ToTable("MemberPhotos");
                });

            modelBuilder.Entity("NiagaraCollegeProject.Models.PAC", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AcademicDivisionID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("PACName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("AcademicDivisionID");

                    b.ToTable("PAC");
                });

            modelBuilder.Entity("NiagaraCollegeProject.Models.Report", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("Summary")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UploadedOn")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Report");
                });

            modelBuilder.Entity("NiagaraCollegeProject.Models.Salutation", b =>
                {
                    b.Property<int?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("SalutationTitle")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Salutations");
                });

            modelBuilder.Entity("NiagaraCollegeProject.Models.Subscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("MemberID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PushAuth")
                        .HasMaxLength(512)
                        .HasColumnType("TEXT");

                    b.Property<string>("PushEndpoint")
                        .HasMaxLength(512)
                        .HasColumnType("TEXT");

                    b.Property<string>("PushP256DH")
                        .HasMaxLength(512)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MemberID");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("NiagaraCollegeProject.Models.ActionDocuments", b =>
                {
                    b.HasBaseType("MVC_Music.Models.UploadedFile");

                    b.Property<int>("ActionItemID")
                        .HasColumnType("INTEGER");

                    b.HasIndex("ActionItemID");

                    b.HasDiscriminator().HasValue("ActionDocuments");
                });

            modelBuilder.Entity("NiagaraCollegeProject.Models.AgendaDocuments", b =>
                {
                    b.HasBaseType("MVC_Music.Models.UploadedFile");

                    b.Property<int>("AgendaID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AgendaItemID")
                        .HasColumnType("INTEGER");

                    b.HasIndex("AgendaItemID");

                    b.HasDiscriminator().HasValue("AgendaDocuments");
                });

            modelBuilder.Entity("NiagaraCollegeProject.Models.MeetingDocuments", b =>
                {
                    b.HasBaseType("MVC_Music.Models.UploadedFile");

                    b.Property<int>("MeetingID")
                        .HasColumnType("INTEGER");

                    b.HasIndex("MeetingID");

                    b.HasDiscriminator().HasValue("MeetingDocuments");
                });

            modelBuilder.Entity("NiagaraCollegeProject.Models.MeetingMinuteDocuments", b =>
                {
                    b.HasBaseType("MVC_Music.Models.UploadedFile");

                    b.Property<int>("MeetingMinuteID")
                        .HasColumnType("INTEGER");

                    b.HasIndex("MeetingMinuteID");

                    b.HasDiscriminator().HasValue("MeetingMinuteDocuments");
                });

            modelBuilder.Entity("NiagaraCollegeProject.Models.MemberDocuments", b =>
                {
                    b.HasBaseType("MVC_Music.Models.UploadedFile");

                    b.Property<int>("MemberID")
                        .HasColumnType("INTEGER");

                    b.HasIndex("MemberID");

                    b.HasDiscriminator().HasValue("MemberDocuments");
                });

            modelBuilder.Entity("NiagaraCollegeProject.Models.ReportDocuments", b =>
                {
                    b.HasBaseType("MVC_Music.Models.UploadedFile");

                    b.Property<int>("ReportID")
                        .HasColumnType("INTEGER");

                    b.HasIndex("ReportID");

                    b.HasDiscriminator().HasValue("ReportDocuments");
                });

            modelBuilder.Entity("MVC_Music.Models.FileContent", b =>
                {
                    b.HasOne("MVC_Music.Models.UploadedFile", "UploadedFile")
                        .WithOne("FileContent")
                        .HasForeignKey("MVC_Music.Models.FileContent", "FileContentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UploadedFile");
                });

            modelBuilder.Entity("NiagaraCollegeProject.Models.ActionItem", b =>
                {
                    b.HasOne("NiagaraCollegeProject.Models.Meeting", "Meeting")
                        .WithMany()
                        .HasForeignKey("MeetingID");

                    b.HasOne("NiagaraCollegeProject.Models.Member", "Member")
                        .WithMany("ActionItems")
                        .HasForeignKey("MemberID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Meeting");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("NiagaraCollegeProject.Models.AgendaItem", b =>
                {
                    b.HasOne("NiagaraCollegeProject.Models.Meeting", "Meeting")
                        .WithMany("AgendaItems")
                        .HasForeignKey("MeetingID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NiagaraCollegeProject.Models.MeetingMinute", null)
                        .WithMany("AgendaItems")
                        .HasForeignKey("MeetingMinuteID");

                    b.HasOne("NiagaraCollegeProject.Models.Member", "Member")
                        .WithMany()
                        .HasForeignKey("MemberID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Meeting");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("NiagaraCollegeProject.Models.CommitteeRole", b =>
                {
                    b.HasOne("NiagaraCollegeProject.Models.AcademicDivision", "Committee")
                        .WithMany()
                        .HasForeignKey("CommitteeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Committee");
                });

            modelBuilder.Entity("NiagaraCollegeProject.Models.Meeting", b =>
                {
                    b.HasOne("NiagaraCollegeProject.Models.AcademicDivision", "AcademicDivision")
                        .WithMany()
                        .HasForeignKey("AcademicDivisionID");

                    b.HasOne("NiagaraCollegeProject.Models.Member", "Member")
                        .WithMany()
                        .HasForeignKey("MemberID");

                    b.HasOne("NiagaraCollegeProject.Models.PAC", "PAC")
                        .WithMany()
                        .HasForeignKey("PACID");

                    b.Navigation("AcademicDivision");

                    b.Navigation("Member");

                    b.Navigation("PAC");
                });

            modelBuilder.Entity("NiagaraCollegeProject.Models.MeetingAttendees", b =>
                {
                    b.HasOne("NiagaraCollegeProject.Models.Meeting", "Meeting")
                        .WithMany("Attendees")
                        .HasForeignKey("MeetingID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NiagaraCollegeProject.Models.Member", "Member")
                        .WithMany("Attendees")
                        .HasForeignKey("MemberID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Meeting");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("NiagaraCollegeProject.Models.MeetingMinute", b =>
                {
                    b.HasOne("NiagaraCollegeProject.Models.Meeting", "Meeting")
                        .WithMany("MeetingMinute")
                        .HasForeignKey("MeetingID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Meeting");
                });

            modelBuilder.Entity("NiagaraCollegeProject.Models.Member", b =>
                {
                    b.HasOne("NiagaraCollegeProject.Models.AcademicDivision", "AcademicDivision")
                        .WithMany("Members")
                        .HasForeignKey("AcademicDivisionID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NiagaraCollegeProject.Models.CommitteeRole", null)
                        .WithMany("Members")
                        .HasForeignKey("CommitteeRoleID");

                    b.HasOne("NiagaraCollegeProject.Models.PAC", "PAC")
                        .WithMany("Members")
                        .HasForeignKey("PACID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NiagaraCollegeProject.Models.Salutation", "Salutation")
                        .WithMany("Members")
                        .HasForeignKey("SalutationID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("AcademicDivision");

                    b.Navigation("PAC");

                    b.Navigation("Salutation");
                });

            modelBuilder.Entity("NiagaraCollegeProject.Models.MemberPhoto", b =>
                {
                    b.HasOne("NiagaraCollegeProject.Models.Member", "Member")
                        .WithOne("MemberPhoto")
                        .HasForeignKey("NiagaraCollegeProject.Models.MemberPhoto", "MemberID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");
                });

            modelBuilder.Entity("NiagaraCollegeProject.Models.PAC", b =>
                {
                    b.HasOne("NiagaraCollegeProject.Models.AcademicDivision", "AcademicDivision")
                        .WithMany("PACs")
                        .HasForeignKey("AcademicDivisionID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AcademicDivision");
                });

            modelBuilder.Entity("NiagaraCollegeProject.Models.Subscription", b =>
                {
                    b.HasOne("NiagaraCollegeProject.Models.Member", "Member")
                        .WithMany("Subscriptions")
                        .HasForeignKey("MemberID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");
                });

            modelBuilder.Entity("NiagaraCollegeProject.Models.ActionDocuments", b =>
                {
                    b.HasOne("NiagaraCollegeProject.Models.ActionItem", "ActionItem")
                        .WithMany("ActionDocuments")
                        .HasForeignKey("ActionItemID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ActionItem");
                });

            modelBuilder.Entity("NiagaraCollegeProject.Models.AgendaDocuments", b =>
                {
                    b.HasOne("NiagaraCollegeProject.Models.AgendaItem", "AgendaItem")
                        .WithMany("AgendaDocuments")
                        .HasForeignKey("AgendaItemID");

                    b.Navigation("AgendaItem");
                });

            modelBuilder.Entity("NiagaraCollegeProject.Models.MeetingDocuments", b =>
                {
                    b.HasOne("NiagaraCollegeProject.Models.Meeting", "Meeting")
                        .WithMany("MeetingDocuments")
                        .HasForeignKey("MeetingID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Meeting");
                });

            modelBuilder.Entity("NiagaraCollegeProject.Models.MeetingMinuteDocuments", b =>
                {
                    b.HasOne("NiagaraCollegeProject.Models.MeetingMinute", "MeetingMinute")
                        .WithMany("MeetingMinuteDocuments")
                        .HasForeignKey("MeetingMinuteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MeetingMinute");
                });

            modelBuilder.Entity("NiagaraCollegeProject.Models.MemberDocuments", b =>
                {
                    b.HasOne("NiagaraCollegeProject.Models.Member", "Member")
                        .WithMany("MemberDocuments")
                        .HasForeignKey("MemberID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");
                });

            modelBuilder.Entity("NiagaraCollegeProject.Models.ReportDocuments", b =>
                {
                    b.HasOne("NiagaraCollegeProject.Models.Report", "Report")
                        .WithMany("ReportDocuments")
                        .HasForeignKey("ReportID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Report");
                });

            modelBuilder.Entity("MVC_Music.Models.UploadedFile", b =>
                {
                    b.Navigation("FileContent");
                });

            modelBuilder.Entity("NiagaraCollegeProject.Models.AcademicDivision", b =>
                {
                    b.Navigation("Members");

                    b.Navigation("PACs");
                });

            modelBuilder.Entity("NiagaraCollegeProject.Models.ActionItem", b =>
                {
                    b.Navigation("ActionDocuments");
                });

            modelBuilder.Entity("NiagaraCollegeProject.Models.AgendaItem", b =>
                {
                    b.Navigation("AgendaDocuments");
                });

            modelBuilder.Entity("NiagaraCollegeProject.Models.CommitteeRole", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("NiagaraCollegeProject.Models.Meeting", b =>
                {
                    b.Navigation("AgendaItems");

                    b.Navigation("Attendees");

                    b.Navigation("MeetingDocuments");

                    b.Navigation("MeetingMinute");
                });

            modelBuilder.Entity("NiagaraCollegeProject.Models.MeetingMinute", b =>
                {
                    b.Navigation("AgendaItems");

                    b.Navigation("MeetingMinuteDocuments");
                });

            modelBuilder.Entity("NiagaraCollegeProject.Models.Member", b =>
                {
                    b.Navigation("ActionItems");

                    b.Navigation("Attendees");

                    b.Navigation("MemberDocuments");

                    b.Navigation("MemberPhoto");

                    b.Navigation("Subscriptions");
                });

            modelBuilder.Entity("NiagaraCollegeProject.Models.PAC", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("NiagaraCollegeProject.Models.Report", b =>
                {
                    b.Navigation("ReportDocuments");
                });

            modelBuilder.Entity("NiagaraCollegeProject.Models.Salutation", b =>
                {
                    b.Navigation("Members");
                });
#pragma warning restore 612, 618
        }
    }
}
