@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@*For Cookies*@
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        var userName = HttpContextAccessor.HttpContext.Request.Cookies["userName"] ?? UserManager.GetUserName(User);
        <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle" style="color: #f2f2f2; font: bold" href="#" id="navbarIDDropdown" role="button" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                @userName - Menu<b class="caret"></b>
            </a>
            <ul class="dropdown-menu" aria-labelledby="navbarIDDropdown">
                <li><a class="dropdown-item" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Change Security Settings</a></li>
                <li><hr class="dropdown-divider"></li>
                <li><a class="dropdown-item" asp-area="" asp-controller="MemberAccount" asp-action="Details">Manage Account</a></li>
                <form class="form-inline, dropdown-item" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                    <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
                </form>
            </ul>
        </li>
    }
    else
    {
        <li style="display: none">
            <a style="display: none" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
